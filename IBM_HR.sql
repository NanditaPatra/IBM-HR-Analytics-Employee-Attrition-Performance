Create database IBM_HR;
use IBM_HR;
SELECT COUNT(*) FROM EMPLOYEE;
SELECT COUNT(*) AS NO_OF_COLUMNS
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = "EMPLOYEE";
SELECT * FROM EMPLOYEE
LIMIT 10;
SELECT COUNT(*) FROM EMPLOYEE
WHERE ATTRITION = "YES";
SELECT ROUND(AVG(AGE),2) AS AVG_AGE
FROM EMPLOYEE;
ALTER TABLE EMPLOYEE
RENAME COLUMN ï»¿Age TO AGE;
SELECT COUNT(*) AS NO_OF_EMPLOYEES, DEPARTMENT
FROM EMPLOYEE
GROUP BY DEPARTMENT
ORDER BY NO_OF_EMPLOYEES DESC;
SELECT COUNT(*) AS NO_OF_EMPLOYEES, EDUCATIONFIELD
FROM EMPLOYEE
GROUP BY EDUCATIONFIELD
ORDER BY NO_OF_EMPLOYEES DESC;
SELECT ROUND(AVG(YEARSATCOMPANY),2) AS AVG_YEARS, DEPARTMENT
FROM EMPLOYEE
GROUP BY DEPARTMENT;
SELECT T1.DEPARTMENT, T1.JOBLEVEL, T1.AVG_MONTHLY_INCOME
FROM (SELECT DEPARTMENT,JOBLEVEL, ROUND(AVG(MONTHLYINCOME),2) AS AVG_MONTHLY_INCOME, 
             ROW_NUMBER() OVER (PARTITION BY DEPARTMENT ORDER BY JOBLEVEL ASC) AS ROWNO
      FROM EMPLOYEE
      GROUP BY DEPARTMENT, JOBLEVEL) AS T1;
SELECT DEPARTMENT, ROUND(AVG(YEARSSINCELASTPROMOTION),2) AS AVG_YEARS_SINCE_LAST_PROMOTION
FROM EMPLOYEE
GROUP BY DEPARTMENT;
SELECT MAX(TOTALWORKINGYEARS) AS MAX_YEAR_OF_EXPERIENCE, MIN(TOTALWORKINGYEARS) AS MIN_YEAR_OF_EXPERIENCE
FROM EMPLOYEE;
SELECT DEPARTMENT, COUNT(*) AS EMPLOYEE_COUNT_LEFT
FROM EMPLOYEE
WHERE ATTRITION = "YES"
GROUP BY DEPARTMENT;
SELECT ATTRITION, ROUND(AVG(MONTHLYINCOME),2) AS AVG_MONTHLY_INCOME
FROM EMPLOYEE
GROUP BY ATTRITION;
SELECT ATTRITION, ROUND(AVG(JOBSATISFACTION),2) AS AVG_MONTHLY_INCOME
FROM EMPLOYEE
GROUP BY ATTRITION;
SELECT DEPARTMENT, ROUND(AVG(HOURLYRATE),2) AS AVG_HOURLY_RATE
FROM EMPLOYEE
GROUP BY DEPARTMENT
ORDER BY AVG_HOURLY_RATE DESC
LIMIT 1;
SELECT T3.JOBROLE, CONCAT(ROUND(((T3.EMP_LEFT_COUNT/T3.EMPLOYEE_COUNT)*100),2),"%") 
AS EMP_TURNOVER_RATE
FROM (WITH T1 AS (SELECT JOBROLE, COUNT(*) AS EMPLOYEE_COUNT
            FROM EMPLOYEE
			GROUP BY JOBROLE),
T2 AS (SELECT JOBROLE, COUNT(*) AS EMP_LEFT_COUNT
	   FROM EMPLOYEE
       WHERE ATTRITION = "YES"
	   GROUP BY JOBROLE)
SELECT T1.JOBROLE, EMPLOYEE_COUNT, EMP_LEFT_COUNT
FROM T1
JOIN T2
  ON T1.JOBROLE = T2.JOBROLE) AS T3;

SELECT EMPLOYEENUMBER, YEARSATCOMPANY
FROM EMPLOYEE
WHERE YEARSATCOMPANY >10 AND JOBSATISFACTION >3
ORDER BY YEARSATCOMPANY DESC;

Select Jobrole, Count(*) as Emp_count
from employee
group by jobrole;

select avg(DAILYRATE), avg(MONTHLYINCOME), avg(HOURLYRATE)
FROM EMPLOYEE;

select DEPARTMENT, round(AVG(YEARSATCOMPANY),2) AS AVG_YEARS_AT_COMPANY
from EMPLOYEE
group by DEPARTMENT
limit 1;

select EMPLOYEENUMBER, MONTHLYINCOME
from EMPLOYEE
where MONTHLYINCOME >= 15000;

SELECT EMPLOYEENUMBER, NUMCOMPANIESWORKED
FROM EMPLOYEE
WHERE NUMCOMPANIESWORKED > 5
ORDER BY NUMCOMPANIESWORKED DESC;

SELECT SUM(MONTHLYINCOME) AS TOTAL_MONTHLYINCOME
FROM EMPLOYEE;

SELECT JOBROLE, ROUND(AVG(PERFORMANCERATING),2) AS AVG_PERFORMANCE_RATING
FROM EMPLOYEE
GROUP BY JOBROLE;

SELECT EMPLOYEENUMBER, AGE,
  CASE
    WHEN AGE <= 30 THEN "YOUNG"
    WHEN AGE BETWEEN 31 AND 50 THEN "MIDDLE-AGED"
    ELSE "SENIOR"
  END AS "AGE_GROUP"
FROM EMPLOYEE
limit 10;

WITH T1 AS (SELECT COUNT(*) AS EMP_NOT_LEFT FROM EMPLOYEE WHERE ATTRITION = "NO"),
     T2 AS (SELECT COUNT(*) AS TOTAL_EMP_COUNT FROM EMPLOYEE)
SELECT CONCAT(ROUND((T1.EMP_NOT_LEFT/T2.TOTAL_EMP_COUNT)*100,2),"%") AS RETENTION_RATE
FROM T1,T2;

SELECT ROUND(AVG(TOTALWORKINGYEARS),2) AS AVG_WORKING_YEARS
FROM EMPLOYEE
WHERE PERFORMANCERATING = 4;

SELECT T1.EMPLOYEENUMBER, T1.JOBROLE, T1.RANK_NUM
FROM (SELECT EMPLOYEENUMBER, JOBROLE, RANK() OVER (PARTITION BY JOBROLE ORDER BY MONTHLYINCOME DESC) AS RANK_NUM
      FROM EMPLOYEE) AS T1
WHERE RANK_NUM <= 10;

SELECT DEPARTMENT, YEARSATCOMPANY, MONTHLYINCOME,
SUM(MONTHLYINCOME) OVER (PARTITION BY DEPARTMENT ORDER BY YEARSATCOMPANY) AS CUMM_SUM
FROM EMPLOYEE;

WITH T1 AS (SELECT EMPLOYEENUMBER, JOBROLE, PERCENTSALARYHIKE,
            DENSE_RANK () OVER (PARTITION BY JOBROLE ORDER BY PERCENTSALARYHIKE DESC) AS RANK_NUM,
            ROW_NUMBER() OVER (PARTITION BY JOBROLE ORDER BY PERCENTSALARYHIKE DESC) AS ROW_NO
            FROM EMPLOYEE)
SELECT EMPLOYEENUMBER, JOBROLE, PERCENTSALARYHIKE
FROM T1
WHERE ROW_NO <= 5;

SELECT EMPLOYEENUMBER, TOTALWORKINGYEARS
FROM EMPLOYEE
WHERE TOTALWORKINGYEARS > (SELECT ROUND(AVG(TOTALWORKINGYEARS),2) AS AVG_TOTAL_WORKINGYEARS
						FROM EMPLOYEE);
                        
SELECT EMPLOYEENUMBER, JOBROLE, MONTHLYINCOME, INCOMERANGE
FROM (SELECT EMPLOYEENUMBER, JOBROLE, MONTHLYINCOME, ROUND((15*MAX_INCOME)/100,2) AS INCOMERANGE
     FROM (SELECT EMPLOYEENUMBER, JOBROLE, MONTHLYINCOME,
           MAX(MONTHLYINCOME) OVER (PARTITION BY JOBROLE) AS MAX_INCOME
		   FROM EMPLOYEE) AS T1) AS T2
WHERE MONTHLYINCOME <= INCOMERANGE;

SELECT EMPLOYEENUMBER, DEPARTMENT
FROM (SELECT EMPLOYEENUMBER, DEPARTMENT, PERFORMANCERATING, MAX(PERFORMANCERATING) OVER (PARTITION BY DEPARTMENT) AS MAX_PER_RATING
FROM EMPLOYEE) AS T1
WHERE PERFORMANCERATING = MAX_PER_RATING;

SELECT MARITALSTATUS, ROUND(AVG(JOBSATISFACTION),2) AS AVG_JOBSAT, ROUND(AVG(ENVIRONMENTSATISFACTION),2) AS AVG_ENVSAT,
ROUND(AVG(RELATIONSHIPSATISFACTION),2) AS AVG_RELSAT
FROM EMPLOYEE
GROUP BY MARITALSTATUS;

SELECT EDUCATIONFIELD, 
CASE
  WHEN EDUCATIONFIELD = "HUMAN RESOURCES" THEN "BUSINESS"
  WHEN EDUCATIONFIELD = "LIFE SCIENCES" THEN "STEM"
  WHEN EDUCATIONFIELD = "MARKETING" THEN "BUSINESS"
  WHEN EDUCATIONFIELD = "MEDICAL" THEN "STEM"
  WHEN EDUCATIONFIELD = "TECHNICAL DEGREE" THEN "STEM"
  ELSE "OTHER"
END AS CATEGORY, ROUND(AVG(MONTHLYINCOME),2) AS AVG_MONTHLYINCOME
FROM EMPLOYEE
GROUP BY EDUCATIONFIELD;

WITH T1 AS (SELECT JOBROLE, COUNT(*) AS TOTAL_EMPCOUNT
FROM EMPLOYEE
GROUP BY JOBROLE),
T2 AS (SELECT JOBROLE, COUNT(*) AS OVERTIME_COUNT
FROM EMPLOYEE
WHERE OVERTIME = "YES"
GROUP BY JOBROLE)
SELECT T1.JOBROLE, ROUND((T2.OVERTIME_COUNT/T1.TOTAL_EMPCOUNT)*100,2) AS OVERTIME_PERCENTAGE
FROM T1
JOIN T2
  ON T1.JOBROLE = T2.JOBROLE;
